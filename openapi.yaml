openapi: 3.0.0
info:
  title: CloudNotes API
  description: API for the CloudNotes application, a sample app for Azure learning.
  version: 1.0.0
servers:
  - url: http://localhost:3000/api
    description: Local development server
  - url: https://<YOUR_APP_SERVICE_NAME>.azurewebsites.net/api
    description: Production server

paths:
  /health:
    get:
      summary: Health Check
      description: Checks if the API is running and healthy.
      responses:
        '200':
          description: API is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    example: UP

  /auth/signup:
    post:
      summary: User Signup
      description: Registers a new user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
      responses:
        '201':
          description: User created successfully
        '400':
          description: Bad request (e.g., missing fields)
        '409':
          description: User with this email already exists

  /auth/login:
    post:
      summary: User Login
      description: Authenticates a user and returns a JWT.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
        '401':
          description: Invalid credentials

  /notes:
    get:
      summary: Get All Notes
      description: Retrieves all notes for the authenticated user.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: A list of notes
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Note'
        '401':
          description: Unauthorized
    post:
      summary: Create a Note
      description: Creates a new note for the authenticated user.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewNote'
      responses:
        '201':
          description: Note created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
        '400':
          description: Bad request

  /notes/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
    get:
      summary: Get a Single Note
      description: Retrieves a single note by its ID.
      security:
        - bearerAuth: []
      responses:
        '200':
          description: The requested note
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
        '404':
          description: Note not found
    put:
      summary: Update a Note
      description: Updates an existing note.
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewNote'
      responses:
        '200':
          description: Note updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Note'
        '404':
          description: Note not found
    delete:
      summary: Delete a Note
      description: Deletes a note by its ID.
      security:
        - bearerAuth: []
      responses:
        '204':
          description: Note deleted successfully
        '404':
          description: Note not found

  /admin/analytics:
    get:
      summary: Get Analytics
      description: Retrieves simple analytics about users and notes.
      responses:
        '200':
          description: Analytics data
          content:
            application/json:
              schema:
                type: object
                properties:
                  users:
                    type: integer
                  notes:
                    type: integer

components:
  schemas:
    Note:
      type: object
      properties:
        id:
          type: integer
        user_id:
          type: integer
        title:
          type: string
        content:
          type: string
        file_url:
          type: string
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
    NewNote:
      type: object
      properties:
        title:
          type: string
        content:
          type: string
        file_url:
          type: string
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT