import React, { useState, useEffect } from 'react';\nimport { useAuth } from '../contexts/AuthContext';\nimport { Navigate } from 'react-router-dom';\nimport axios from 'axios';\n\nconst API_URL = import.meta.env.VITE_API_URL || 'http://localhost:3000/api';\n\nfunction Dashboard() {\n  const [notes, setNotes] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [newTitle, setNewTitle] = useState('');\n  const [newContent, setNewContent] = useState('');\n  const [newFile, setNewFile] = useState(null);\n  const [submitting, setSubmitting] = useState(false);\n  const { token, logout, user } = useAuth();\n\n  useEffect(() => {\n    const fetchNotes = async () => {\n      setLoading(true);\n      if (!token) {\n        setError('You are not logged in.');\n        setLoading(false);\n        return;\n      }\n      try {\n        const response = await axios.get(`${API_URL}/notes`, {\n          headers: { Authorization: `Bearer ${token}` },\n        });\n        setNotes(response.data);\n        setLoading(false);\n      } catch (err) {\n        setError('Failed to fetch notes.');\n        setLoading(false);\n        console.error(err);\n        if (err.response && err.response.status === 403) {\n          logout();\n        }\n      }\n    };\n\n    fetchNotes();\n  }, [token, logout]);\n\n  const handleCreate = async (e) => {\n    e.preventDefault();\n    if (!newTitle || !newContent) {\n      setError('Title and content are required.');\n      return;\n    }\n    setSubmitting(true);\n    const formData = new FormData();\n    formData.append('title', newTitle);\n    formData.append('content', newContent);\n    if (newFile) formData.append('file', newFile);\n    try {\n      await axios.post(`${API_URL}/notes`, formData, {\n        headers: {\n          Authorization: `Bearer ${token}`,\n          'Content-Type': 'multipart/form-data',\n        },\n      });\n      setNewTitle('');\n      setNewContent('');\n      setNewFile(null);\n      // Refetch\n      const response = await axios.get(`${API_URL}/notes`, {\n        headers: { Authorization: `Bearer ${token}` },\n      });\n      setNotes(response.data);\n      setError('');\n    } catch (err) {\n      setError('Failed to create note. Please try again.');\n      console.error(err);\n    } finally {\n      setSubmitting(false);\n    }\n  };\n\n  if (loading) {\n    return <div className="loading">Loading your dashboard...</div>;\n  }\n\n  if (!user) {\n    return <Navigate to="/login" replace />;\n  }\n\n  return (\n    <div>\n      <h2>Dashboard</h2>\n      <p>Welcome, {user.email}!</p>\n      <button onClick={logout} className="logout-btn">Logout</button>\n      {error && <div className="error">{error}</div>}\n      <form onSubmit={handleCreate} className="create-note-form">\n        <h3>Create New Note</h3>\n        <input\n          type="text"\n          placeholder="Note Title"\n          value={newTitle}\n          onChange={(e) => setNewTitle(e.target.value)}\n          required\n          className="input"\n        />\n        <textarea\n          placeholder="Note Content"\n          value={newContent}\n          onChange={(e) => setNewContent(e.target.value)}\n          required\n          className="textarea"\n          rows={4}\n        />\n        <input\n          type="file"\n          onChange={(e) => setNewFile(e.target.files[0])}\n          className="file-input"\n        />\n        <button type="submit" disabled={submitting} className="full-width create-btn">\n          {submitting ? 'Creating...' : 'Create Note'}\n        </button>\n      </form>\n      <h3>Your Notes</h3>\n      {notes.length === 0 ? (\n        <p>You have no notes yet.</p>\n      ) : (\n        <ul className="notes-list">\n          {notes.map((note) => (\n            <li key={note.id} className="note-card">\n              <h4 className="note-title">{note.title}</h4>\n              <p className="note-content">{note.content}</p>\n              {note.fileUrl && (\n                <a href={note.fileUrl} target="_blank" rel="noopener noreferrer">\n                  View Attachment\n                </a>\n              )}\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n\nexport default Dashboard;