name: Claude Code
on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  issues:
    types: [opened, assigned]
  pull_request_review:
    types: [submitted]

jobs:
  claude:
    if: |
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review' && contains(github.event.review.body, '@claude')) ||
      (github.event_name == 'issues' && (contains(github.event.issue.body, '@claude') || contains(github.event.issue.title, '@claude')))
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
      issues: read
      id-token: write
      actions: read # Required for Claude to read CI results on PRs
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Setup Claude Code Router (Flash-Lite Optimized)
        run: |
          # Install bun package manager
          curl -fsSL https://bun.sh/install | bash
          
          # Create router config directory
          mkdir -p $HOME/.claude-code-router
          
          # Create Flash-Lite optimized config
          cat << 'EOF' > $HOME/.claude-code-router/config.json
          {
            "LOG": true,
            "LOG_LEVEL": "info",
            "NON_INTERACTIVE_MODE": true,
            "API_TIMEOUT_MS": 120000,
            "Providers": [
              {
                "name": "gemini",
                "api_base_url": "https://generativelanguage.googleapis.com/v1beta/models/",
                "api_key": "$GEMINI_API_KEY",
                "models": [
                  "gemini-2.5-flash-lite",
                  "gemini-2.5-flash",
                  "gemini-2.5-pro"
                ],
                "transformer": {
                  "use": ["gemini"]
                }
              }
            ],
            "Router": {
              "default": "gemini,gemini-2.5-flash-lite",
              "background": "gemini,gemini-2.5-flash-lite",
              "think": "gemini,gemini-2.5-flash",
              "longContext": "gemini,gemini-2.5-pro",
              "longContextThreshold": 30000
            }
          }
          EOF
          
          echo "✅ Flash-Lite router configured"
          echo "📊 Model: gemini-2.5-flash-lite"
          echo "⚡ Optimized for speed and cost-efficiency"
        shell: bash
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}

      - name: Start Claude Code Router Service
        run: |
          # Start the router in background
          nohup ~/.bun/bin/bunx @musistudio/claude-code-router@latest start > /tmp/router.log 2>&1 &
          
          # Wait for service initialization
          echo "⏳ Starting router service..."
          sleep 5
          
          # Verify service is running with retry logic
          for i in {1..5}; do
            if curl -f http://localhost:3456/health 2>/dev/null; then
              echo "✅ Router service is healthy"
              exit 0
            fi
            echo "⏳ Retry $i/5..."
            sleep 2
          done
          
          # Service check failed - show logs
          echo "⚠️ Health check failed - showing router logs:"
          cat /tmp/router.log
          
          # Continue anyway - service might still work
          echo "⚡ Continuing with workflow..."
        shell: bash
        env:
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}

      - name: Run Claude Code
        id: claude
        uses: anthropics/claude-code-action@v1
        env:
          # Point to local router
          ANTHROPIC_BASE_URL: http://localhost:3456
          GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY }}
        with:
          # Router handles auth
          anthropic_api_key: "router-managed"
          
          # Preserve your additional permissions
          additional_permissions: |
            actions: read

      - name: Usage Report
        if: always()
        run: |
          echo "=== 📊 Flash-Lite Usage Report ==="
          echo "✅ Model: Gemini 2.5 Flash-Lite"
          echo "💰 Cost: ~$0.10 per 1M input tokens"
          echo "⚡ Speed: Fastest in Gemini 2.5 family"
          echo "🎯 Optimized for: Quick reviews, small-medium tasks"
          echo ""
          echo "=== 🔄 Router Configuration ==="
          echo "Default: Flash-Lite (fast, cost-effective)"
          echo "Background: Flash-Lite (parallel processing)"
          echo "Think: Flash (complex reasoning)"
          echo "Long Context: Pro (>30K tokens)"
        continue-on-error: true

      - name: Debug on Failure
        if: failure()
        run: |
          echo "=== 🔍 Debug Information ==="
          echo ""
          echo "=== Router Startup Logs ==="
          cat /tmp/router.log 2>/dev/null || echo "No startup logs found"
          echo ""
          echo "=== Router Application Logs ==="
          tail -n 100 $HOME/.claude-code-router/claude-code-router.log 2>/dev/null || echo "No application logs found"
          echo ""
          echo "=== Router Server Logs ==="
          tail -n 100 $HOME/.claude-code-router/logs/ccr-*.log 2>/dev/null || echo "No server logs found"
          echo ""
          echo "=== Service Check ==="
          ps aux | grep claude-code-router || echo "Router process not running"
          echo ""
          echo "=== Network Check ==="
          curl -v http://localhost:3456/health 2>&1 || echo "Health endpoint unreachable"
          echo ""
          echo "=== Configuration ==="
          cat $HOME/.claude-code-router/config.json 2>/dev/null || echo "Config file not found"
