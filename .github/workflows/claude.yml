name: Claude Code
on:
  issue_comment:
    types: [created]
  pull_request_review_comment:
    types: [created]
  issues:
    types: [opened, assigned]
  pull_request_review:
    types: [submitted]

jobs:
  claude:
    if: |
      (github.event_name == 'issue_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review_comment' && contains(github.event.comment.body, '@claude')) ||
      (github.event_name == 'pull_request_review' && contains(github.event.review.body, '@claude')) ||
      (github.event_name == 'issues' && (contains(github.event.issue.body, '@claude') || contains(github.event.issue.title, '@claude')))
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
      issues: read
      id-token: write
      actions: read # Required for Claude to read CI results on PRs
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          
      - name: Set Cloud Code identity
        run: |
          git config --global user.name "Cloud Code"
          git config --global user.email "123456+cloud-code-bot@users.noreply.github.com"

      - name: Setup Claude Code Router
        run: |
          # Install bun package manager
          curl -fsSL https://bun.sh/install | bash
          
          # Create router config directory
          mkdir -p $HOME/.claude-code-router
          
          # Create config file
          cat << 'EOF' > $HOME/.claude-code-router/config.json
          {
            "LOG": true,
            "LOG_LEVEL": "info",
            "NON_INTERACTIVE_MODE": true,
            "API_TIMEOUT_MS": 600000,
            "Providers": [
              {
                "name": "openrouter",
                "api_base_url": "https://openrouter.ai/api/v1/chat/completions",
                "api_key": "$OPENROUTER_API_KEY",
                "models": [
                  "x-ai/grok-4-fast:free"
                ],
                "transformer": {
                  "use": ["openrouter"]
                }
              }
            ],
            "Router": {
              "default": "openrouter,x-ai/grok-4-fast:free"
            }
          }
          EOF
          
          echo "✅ Router configured"
        shell: bash
        env:
          OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}

      - name: Start Claude Code Router Service
        run: |
          # Start the router in background
          nohup ~/.bun/bin/bunx @musistudio/claude-code-router@latest start &
          
          # Wait for service initialization
          sleep 5
          
          # Verify service is running
          if curl -f http://localhost:3456/health 2>/dev/null; then
            echo "✅ Router service is healthy"
          else
            echo "⚠️ Health check failed, but service may still be running"
          fi
        shell: bash
        env:
          OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}

      - name: Run Claude Code
        id: claude
        uses: anthropics/claude-code-action@v1
        env:
          # Point to local router
          ANTHROPIC_BASE_URL: http://localhost:3456
          OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
        with:
          # Router handles auth
          anthropic_api_key: "router-managed"
          
          # Preserve your additional permissions
          additional_permissions: |
            actions: read
          
          # Optional: Custom prompt (uncomment if needed)
          # prompt: 'Update the pull request description to include a summary of changes.'
          
          # Optional: Claude args
          # claude_args: '--allowed-tools Bash(gh pr:*)'

      - name: Usage Report (Optional)
        if: always()
        run: |
          echo "=== Model Usage ==="
          echo "✅ Using FREE DeepSeek v3.1 model"
          echo "💰 Cost: $0.00 per request"
          echo "📊 No usage limits on free tier"
        continue-on-error: true

      - name: Debug on Failure (Optional)
        if: failure()
        run: |
          echo "=== Router Logs ==="
          tail -n 50 $HOME/.claude-code-router/logs/ccr-*.log 2>/dev/null || echo "No logs found"
          echo "=== Service Check ==="
          ps aux | grep claude-code-router || echo "Router not running"
